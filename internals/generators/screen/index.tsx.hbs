/**
 * {{ properCase name }}
 */

import * as React from 'react'
import { compose } from 'react-apollo'
{{#if wantActionsAndReducer}}
import { connect } from 'react-redux'
import { ReducersObject } from '../../store/rootReducer'
import * as {{ camelCase name }}Actions from './actions'
{{/if}}
import { Container, Text } from './styledComponents'

interface Props {}

export class {{ properCase name }} extends React.Component<Props, {}> {
  render() {
    return (
      <Container>
        <Text>{{ properCase name }} Screen</Text>
      </Container>
    )
  }
}

{{#if wantActionsAndReducer}}
const mapStateToProps = ({ {{ camelCase name }} }: ReducersObject) => {{ camelCase name }}.toJS()

{{/if}}
{{#if wantActionsAndReducer}}
const {{ properCase name }}Enhance = compose(
  connect(mapStateToProps, { ...{{ camelCase name }}Actions })
)({{ properCase name }})

export default {{ properCase name }}Enhance
{{else}}
export default {{ properCase name }}
{{/if}}