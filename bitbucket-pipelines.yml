# docker image
image: node:9.4.0

# set docker enabled
options:
  docker: true

definitions:
  services:
    docker:
      memory: 2048

pipelines:
  default:
    - step:
        script:
          - npm install --production
          - npm run lint
  branches:
    development:
      - step:
          name: Deploy to Kubernetes
          deployment: staging
          script:
            # install yarn and yarn build
            # - curl -o- -L https://yarnpkg.com/install.sh | bash
            # - export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
            - export CI=false
            # - npm install --production
            # - yarn build
            # Installing gcloud
            - curl -o /tmp/google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-161.0.0-linux-x86_64.tar.gz
            - tar -xvf /tmp/google-cloud-sdk.tar.gz -C /tmp/
            - /tmp/google-cloud-sdk/install.sh -q
            - source /tmp/google-cloud-sdk/path.bash.inc
            # Installing kubectl
            - gcloud components install kubectl -q
            # Authentication
            - echo $GCLOUD_API_KEYFILE | base64 --decode --ignore-garbage > ./gcloud-api-key.json
            - gcloud auth activate-service-account --key-file gcloud-api-key.json
            - gcloud config set project $GCLOUD_PROJECT
            - gcloud container clusters get-credentials $GCLOUD_CLUSTER --zone=$GCLOUD_ZONE
            # Building images
            - docker build --build-arg GOOGLE_ID=$GOOGLE_ID --build-arg GOOGLE_TAG_MANAGER_ID=$GOOGLE_TAG_MANAGER_ID --build-arg FACEBOOK_ID=$FACEBOOK_ID --build-arg GRAPHQL_URI_BASE=$GRAPHQL_URI_BASE --build-arg BASE_URL=$BASE_URL --build-arg STORAGE_URL=$STORAGE_URL --build-arg PK_STRIPE=$PK_STRIPE --build-arg PK_STRIPE_US=$PK_STRIPE_US --build-arg PK_STRIPE_CA=$PK_STRIPE_CA --build-arg PK_STRIPE_EU=$PK_STRIPE_EU --build-arg PAYPAL_CLIENT_ID=$PAYPAL_CLIENT_ID --build-arg PAYPAL_CLIENT_ID_US=$PAYPAL_CLIENT_ID_US --build-arg PAYPAL_CLIENT_ID_CA=$PAYPAL_CLIENT_ID_CA --build-arg PAYPAL_CLIENT_ID_EU=$PAYPAL_CLIENT_ID_EU --build-arg PAYPAL_ENV=$PAYPAL_ENV --build-arg GOOGLE_MAP_KEY=$GOOGLE_MAP_KEY --build-arg INTERCOM_KEY=$INTERCOM_KEY --build-arg DEFAULT_CURRENCY=$DEFAULT_CURRENCY . -t us.gcr.io/$GCLOUD_PROJECT/$APP/development:$BITBUCKET_COMMIT
            # Pushing SHA1 image
            - gcloud docker -- push us.gcr.io/$GCLOUD_PROJECT/$APP/development:$BITBUCKET_COMMIT
            # Pushing latest image
            - docker tag us.gcr.io/$GCLOUD_PROJECT/$APP/development:$BITBUCKET_COMMIT us.gcr.io/$GCLOUD_PROJECT/$APP/development:latest
            - gcloud docker -- push us.gcr.io/$GCLOUD_PROJECT/$APP/development:latest
            # Deploy the image
            - kubectl set image deployment $APP $APP=us.gcr.io/$GCLOUD_PROJECT/$APP/development:$BITBUCKET_COMMIT --record --namespace=development
    master:
      - step:
          name: Deploy to Kubernetes
          deployment: production
          script:
            # install yarn and yarn build
            # - curl -o- -L https://yarnpkg.com/install.sh | bash
            # - export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
            - export CI=false
            # - npm install --production
            # - yarn build
            # Installing gcloud
            - curl -o /tmp/google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-161.0.0-linux-x86_64.tar.gz
            - tar -xvf /tmp/google-cloud-sdk.tar.gz -C /tmp/
            - /tmp/google-cloud-sdk/install.sh -q
            - source /tmp/google-cloud-sdk/path.bash.inc
            # Installing kubectl
            - gcloud components install kubectl -q
            # Authentication
            - echo $GCLOUD_API_KEYFILE_PRODUCTION | base64 --decode --ignore-garbage > ./gcloud-api-key.json
            - gcloud auth activate-service-account --key-file gcloud-api-key.json
            - gcloud config set project $GCLOUD_PROJECT_PRODUCTION
            - gcloud container clusters get-credentials $GCLOUD_CLUSTER_PRODUCTION --zone=$GCLOUD_ZONE_PRODUCTION
            # Building images
            - docker build --build-arg GOOGLE_ID=$GOOGLE_ID_PRODUCTION --build-arg GOOGLE_TAG_MANAGER_ID=$GOOGLE_TAG_MANAGER_ID_PRODUCTION --build-arg FACEBOOK_ID=$FACEBOOK_ID_PRODUCTION --build-arg GRAPHQL_URI_BASE=$GRAPHQL_URI_BASE_PRODUCTION --build-arg BASE_URL=$BASE_URL_PRODUCTION --build-arg STORAGE_URL=$STORAGE_URL_PRODUCTION --build-arg PK_STRIPE=$PK_STRIPE_PRODUCTION --build-arg PK_STRIPE_US=$PK_STRIPE_US_PRODUCTION --build-arg PK_STRIPE_CA=$PK_STRIPE_CA_PRODUCTION --build-arg PK_STRIPE_EU=$PK_STRIPE_EU_PRODUCTION --build-arg PAYPAL_CLIENT_ID=$PAYPAL_CLIENT_ID_PRODUCTION --build-arg PAYPAL_CLIENT_ID_US=$PAYPAL_CLIENT_ID_US_PRODUCTION --build-arg PAYPAL_CLIENT_ID_CA=$PAYPAL_CLIENT_ID_CA_PRODUCTION --build-arg PAYPAL_CLIENT_ID_EU=$PAYPAL_CLIENT_ID_EU_PRODUCTION --build-arg PAYPAL_ENV=$PAYPAL_ENV_PRODUCTION --build-arg GOOGLE_MAP_KEY=$GOOGLE_MAP_KEY_PRODUCTION --build-arg INTERCOM_KEY=$INTERCOM_KEY_PRODUCTION --build-arg DEFAULT_CURRENCY=$DEFAULT_CURRENCY_PRODUCTION . -t us.gcr.io/$GCLOUD_PROJECT_PRODUCTION/$APP/production:$BITBUCKET_COMMIT
            # Pushing SHA1 image
            - gcloud docker -- push us.gcr.io/$GCLOUD_PROJECT_PRODUCTION/$APP/production:$BITBUCKET_COMMIT
            # Pushing latest image
            - docker tag us.gcr.io/$GCLOUD_PROJECT_PRODUCTION/$APP/production:$BITBUCKET_COMMIT us.gcr.io/$GCLOUD_PROJECT_PRODUCTION/$APP/production:latest
            - gcloud docker -- push us.gcr.io/$GCLOUD_PROJECT_PRODUCTION/$APP/production:latest
            # Deploy the image
            - kubectl set image deployment $APP $APP=us.gcr.io/$GCLOUD_PROJECT_PRODUCTION/$APP/production:$BITBUCKET_COMMIT --record --namespace=production
